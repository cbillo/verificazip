unit AAlteracao;

interface

uses
  Windows, Messages, SysUtils, Classes, Graphics, Controls, Forms, Dialogs,
  StdCtrls, Buttons, Mask, numericos, Db, DBTables, Registry;

type
  TFAtualizacao = class(TForm)
    BitBtn2: TBitBtn;
    Database1: TDatabase;
    aux: TQuery;
    GroupBox1: TGroupBox;
    BitBtn1: TBitBtn;
    GroupBox2: TGroupBox;
    BitBtn3: TBitBtn;
    numerico1: Tnumerico;
    Label1: TLabel;
    Edit1: TEdit;
    Label2: TLabel;
    procedure BitBtn1Click(Sender: TObject);
    procedure BitBtn3Click(Sender: TObject);
    procedure BitBtn2Click(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  FAtualizacao: TFAtualizacao;

implementation

  uses constmsg, fundata;

{$R *.DFM}

procedure TFAtualizacao.BitBtn1Click(Sender: TObject);
var
  ini : TRegIniFile;
  senha : string;
begin
  if Entrada( 'Senha','Senha', senha,true,clwhite,clsilver) then
    if senha = inttoStr((dia(date) + Hora(time))) then
    begin
      Ini := TRegIniFile.Create('Software\Systec\Sistema');
      Ini.WriteString('SENHAS','BANCODADOS', '');  // carrega senha do banco
      Ini.Free;
    end;
end;

procedure TFAtualizacao.BitBtn3Click(Sender: TObject);
var
  senha : string;
begin
  if (Edit1.Text <> '' ) and (numerico1.AValor <> 0 ) then
    if Entrada( 'Senha','Senha', senha,true,clwhite,clsilver) then
      if senha = intTostr(dia(date) + Hora(time)) then
      begin
        Database1.AliasName :=  Edit1.Text;
        Database1.Connected := true;
        if Database1.Connected then
        begin
          aux.sql.clear;
          aux.SQL.add('update cfg_geral set i_ult_alt = ' + IntTostr(trunc(numerico1.AValor)));
          aux.ExecSQL;
        end;
        Database1.Connected := false;
     end;
end;

procedure TFAtualizacao.BitBtn2Click(Sender: TObject);
begin
self.close;
end;

end.
